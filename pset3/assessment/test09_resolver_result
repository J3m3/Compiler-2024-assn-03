{'gvars': {':Godel.code': None, ':Godel.prime': None}, 'funcs': {':Util.exp': (['m', 'n'], [], ['r'], [('assign', 'r', ('number', 1)), ('while', ('>', ('var', 'n'), ('number', 0)), ('stmts', [('assign', 'r', ('*', ('var', 'r'), ('var', 'm'))), ('assign', 'n', ('-', ('var', 'n'), ('number', 1)))])), ('return', ('var', 'r'))]), ':Util.isqrt': (['n'], [], ['r'], [('assign', 'r', ('number', 0)), ('while', ('<=', ('*', ('+', ('var', 'r'), ('number', 1)), ('+', ('var', 'r'), ('number', 1))), ('var', 'n')), ('assign', 'r', ('+', ('var', 'r'), ('number', 1)))), ('return', ('var', 'r'))]), ':Util.is_prime': (['n'], [], ['r', 'i'], [('if', ('<=', ('var', 'n'), ('number', 1)), ('return', ('number', 0)), ('skip',)), ('call', 'r', ':Util.isqrt', [('var', 'n')]), ('assign', 'i', ('number', 2)), ('while', ('<=', ('var', 'i'), ('var', 'r')), ('if', ('==', ('%', ('var', 'n'), ('var', 'i')), ('number', 0)), ('return', ('number', 0)), ('assign', 'i', ('+', ('var', 'i'), ('number', 1))))), ('return', ('number', 1))]), ':Util.next_prime': (['n'], [], ['p'], [('assign', 'p', ('number', 0)), ('while', ('==', ('var', 'p'), ('number', 0)), ('stmts', [('assign', 'n', ('+', ('var', 'n'), ('number', 1))), ('call', 'p', ':Util.is_prime', [('var', 'n')])])), ('return', ('var', 'n'))]), ':Godel.init_put': ([], [], [], [('assign', ':Godel.code', ('number', 1)), ('assign', ':Godel.prime', ('number', 2))]), ':Godel.put': (['x'], [], ['t'], [('call', 't', ':Util.exp', [('var', ':Godel.prime'), ('var', 'x')]), ('assign', ':Godel.code', ('*', ('var', ':Godel.code'), ('var', 't'))), ('call', ':Godel.prime', ':Util.next_prime', [('var', ':Godel.prime')]), ('return', ('var', ':Godel.code'))]), ':Godel.init_get': ([], [], [], [('assign', ':Godel.prime', ('number', 2))]), ':Godel.get': ([], [], ['x'], [('assign', 'x', ('number', 0)), ('while', ('==', ('%', ('var', ':Godel.code'), ('var', ':Godel.prime')), ('number', 0)), ('stmts', [('assign', ':Godel.code', ('/', ('var', ':Godel.code'), ('var', ':Godel.prime'))), ('assign', 'x', ('+', ('var', 'x'), ('number', 1)))])), ('call', ':Godel.prime', ':Util.next_prime', [('var', ':Godel.prime')]), ('return', ('var', 'x'))]), ':main': ([], [], ['r', 'x', '_'], [('call', '_', ':Godel.init_put', []), ('assign', 'x', ('number', 1)), ('while', ('>', ('var', 'x'), ('number', 0)), ('stmts', [('read', 'x'), ('if', ('>', ('var', 'x'), ('number', 0)), ('call', 'r', ':Godel.put', [('var', 'x')]), ('skip',))])), ('print', ('var', ':Godel.code')), ('call', '_', ':Godel.init_get', []), ('assign', 'x', ('number', 1)), ('while', ('>', ('var', 'x'), ('number', 0)), ('stmts', [('call', 'x', ':Godel.get', []), ('if', ('>', ('var', 'x'), ('number', 0)), ('print', ('var', 'x')), ('skip',))]))])}}